--- src/Terraria/Terraria/Social/Steam/WorkshopHelper.cs
+++ src/tModLoader/Terraria/Social/Steam/WorkshopHelper.cs
@@ -3,12 +_,13 @@
 using System.Collections.Generic;
 using System.IO;
 using Terraria.IO;
+using Terraria.ModLoader;
 using Terraria.Social.Base;
 using Terraria.Utilities;
 
 namespace Terraria.Social.Steam
 {
-	public class WorkshopHelper
+	public partial class WorkshopHelper
 	{
 		public class UGCBased
 		{
@@ -34,6 +_,11 @@
 					private set;
 				}
 
+				public List<string> ModPaths {
+					get;
+					private set;
+				}
+
 				public Downloader() {
 					ResourcePackPaths = new List<string>();
 					WorldPaths = new List<string>();
@@ -42,18 +_,35 @@
 				public static Downloader Create() => new Downloader();
 
 				public List<string> GetListOfSubscribedItemsPaths() {
+					List<string> list = new List<string>();
+
+					var array = new AppId_t[] { ModLoader.Engine.Steam.TerrariaAppId_t, ModLoader.Engine.Steam.TMLAppID_t };
+					foreach (var app in array) {
+						SteamApps.GetAppInstallDir(app, out string installLoc, 1000);
+						var workshopLoc = Path.Combine(Directory.GetParent(Directory.GetParent(installLoc).ToString()).ToString(),"workshop","content", app.m_AppId.ToString());
+						if (Directory.Exists(workshopLoc)) {
+							list.AddRange(Directory.EnumerateDirectories(workshopLoc));
+						}
+					}
+
+					string gogDirectory = Path.Combine(Directory.GetCurrentDirectory(), "steamapps", "workshop", "content", ModManager.thisApp.ToString());
+					if (Directory.Exists(gogDirectory)) {
+						list.AddRange(Directory.EnumerateDirectories(gogDirectory));
+					}
+
+					/*
 					PublishedFileId_t[] array = new PublishedFileId_t[SteamUGC.GetNumSubscribedItems()];
 					SteamUGC.GetSubscribedItems(array, (uint)array.Length);
 					ulong punSizeOnDisk = 0uL;
 					string pchFolder = string.Empty;
 					uint punTimeStamp = 0u;
-					List<string> list = new List<string>();
+					
 					PublishedFileId_t[] array2 = array;
 					for (int i = 0; i < array2.Length; i++) {
 						if (SteamUGC.GetItemInstallInfo(array2[i], out punSizeOnDisk, out pchFolder, 1024u, out punTimeStamp))
 							list.Add(pchFolder);
 					}
-
+					*/
 					return list;
 				}
 
@@ -75,6 +_,9 @@
 							if (!(a == "World")) {
 								if (a == "ResourcePack")
 									ResourcePackPaths.Add(listOfSubscribedItemsPath);
+								else if (a == "Mod") {
+									ModPaths.Add(listOfSubscribedItemsPath);
+								}
 							}
 							else {
 								WorldPaths.Add(listOfSubscribedItemsPath);
